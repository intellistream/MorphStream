// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message.proto

#include "message.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace message {

inline constexpr setDSMessage::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        key_{0},
        value_{0} {}

template <typename>
PROTOBUF_CONSTEXPR setDSMessage::setDSMessage(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct setDSMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR setDSMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~setDSMessageDefaultTypeInternal() {}
  union {
    setDSMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 setDSMessageDefaultTypeInternal _setDSMessage_default_instance_;

inline constexpr setCCMessage::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : key_{0},
        cc_{static_cast< ::message::CC >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR setCCMessage::setCCMessage(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct setCCMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR setCCMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~setCCMessageDefaultTypeInternal() {}
  union {
    setCCMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 setCCMessageDefaultTypeInternal _setCCMessage_default_instance_;

inline constexpr getDSMessage::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : key_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR getDSMessage::getDSMessage(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct getDSMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR getDSMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~getDSMessageDefaultTypeInternal() {}
  union {
    getDSMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 getDSMessageDefaultTypeInternal _getDSMessage_default_instance_;

inline constexpr getCCMessage::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : key_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR getCCMessage::getCCMessage(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct getCCMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR getCCMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~getCCMessageDefaultTypeInternal() {}
  union {
    getCCMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 getCCMessageDefaultTypeInternal _getCCMessage_default_instance_;

inline constexpr UDFResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        id_{::uint64_t{0u}},
        saidx_{0},
        key_{0},
        value_{0} {}

template <typename>
PROTOBUF_CONSTEXPR UDFResponse::UDFResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct UDFResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UDFResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UDFResponseDefaultTypeInternal() {}
  union {
    UDFResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UDFResponseDefaultTypeInternal _UDFResponse_default_instance_;

inline constexpr UDFReadyMessage::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        id_{::uint64_t{0u}},
        saidx_{0},
        key_{0},
        value_{0} {}

template <typename>
PROTOBUF_CONSTEXPR UDFReadyMessage::UDFReadyMessage(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct UDFReadyMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UDFReadyMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UDFReadyMessageDefaultTypeInternal() {}
  union {
    UDFReadyMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UDFReadyMessageDefaultTypeInternal _UDFReadyMessage_default_instance_;

inline constexpr TxnReqMessage::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : id_{::uint64_t{0u}},
        cc_{static_cast< ::message::CC >(0)},
        saidx_{0},
        key_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TxnReqMessage::TxnReqMessage(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct TxnReqMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TxnReqMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TxnReqMessageDefaultTypeInternal() {}
  union {
    TxnReqMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TxnReqMessageDefaultTypeInternal _TxnReqMessage_default_instance_;

inline constexpr TxnDoneMessage::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : id_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TxnDoneMessage::TxnDoneMessage(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct TxnDoneMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TxnDoneMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TxnDoneMessageDefaultTypeInternal() {}
  union {
    TxnDoneMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TxnDoneMessageDefaultTypeInternal _TxnDoneMessage_default_instance_;

inline constexpr SFCMessage::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : sfcjson_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SFCMessage::SFCMessage(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SFCMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SFCMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SFCMessageDefaultTypeInternal() {}
  union {
    SFCMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SFCMessageDefaultTypeInternal _SFCMessage_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR PauseMessage::PauseMessage(::_pbi::ConstantInitialized) {}
struct PauseMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PauseMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PauseMessageDefaultTypeInternal() {}
  union {
    PauseMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PauseMessageDefaultTypeInternal _PauseMessage_default_instance_;

inline constexpr MonitorReportMessage::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : cc_{static_cast< ::message::CC >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MonitorReportMessage::MonitorReportMessage(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct MonitorReportMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MonitorReportMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MonitorReportMessageDefaultTypeInternal() {}
  union {
    MonitorReportMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MonitorReportMessageDefaultTypeInternal _MonitorReportMessage_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR ContinueMessage::ContinueMessage(::_pbi::ConstantInitialized) {}
struct ContinueMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ContinueMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ContinueMessageDefaultTypeInternal() {}
  union {
    ContinueMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ContinueMessageDefaultTypeInternal _ContinueMessage_default_instance_;

inline constexpr MessageFromVNFInst::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : msg_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR MessageFromVNFInst::MessageFromVNFInst(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct MessageFromVNFInstDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MessageFromVNFInstDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MessageFromVNFInstDefaultTypeInternal() {}
  union {
    MessageFromVNFInst _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MessageFromVNFInstDefaultTypeInternal _MessageFromVNFInst_default_instance_;

inline constexpr MessageFromStateManager::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : msg_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR MessageFromStateManager::MessageFromStateManager(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct MessageFromStateManagerDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MessageFromStateManagerDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MessageFromStateManagerDefaultTypeInternal() {}
  union {
    MessageFromStateManager _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MessageFromStateManagerDefaultTypeInternal _MessageFromStateManager_default_instance_;
}  // namespace message
static ::_pb::Metadata file_level_metadata_message_2eproto[14];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_message_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_message_2eproto = nullptr;
const ::uint32_t TableStruct_message_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::message::MessageFromStateManager, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::message::MessageFromStateManager, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::message::MessageFromStateManager, _impl_.msg_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::message::PauseMessage, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::message::ContinueMessage, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::message::TxnDoneMessage, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::message::TxnDoneMessage, _impl_.id_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::message::getCCMessage, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::message::getCCMessage, _impl_.key_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::message::setCCMessage, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::message::setCCMessage, _impl_.key_),
    PROTOBUF_FIELD_OFFSET(::message::setCCMessage, _impl_.cc_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::message::getDSMessage, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::message::getDSMessage, _impl_.key_),
    PROTOBUF_FIELD_OFFSET(::message::setDSMessage, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::message::setDSMessage, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::message::setDSMessage, _impl_.key_),
    PROTOBUF_FIELD_OFFSET(::message::setDSMessage, _impl_.value_),
    ~0u,
    0,
    PROTOBUF_FIELD_OFFSET(::message::UDFReadyMessage, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::message::UDFReadyMessage, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::message::UDFReadyMessage, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::message::UDFReadyMessage, _impl_.saidx_),
    PROTOBUF_FIELD_OFFSET(::message::UDFReadyMessage, _impl_.key_),
    PROTOBUF_FIELD_OFFSET(::message::UDFReadyMessage, _impl_.value_),
    ~0u,
    ~0u,
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::message::UDFResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::message::UDFResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::message::UDFResponse, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::message::UDFResponse, _impl_.saidx_),
    PROTOBUF_FIELD_OFFSET(::message::UDFResponse, _impl_.key_),
    PROTOBUF_FIELD_OFFSET(::message::UDFResponse, _impl_.value_),
    ~0u,
    ~0u,
    0,
    1,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::message::MessageFromVNFInst, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::message::MessageFromVNFInst, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::message::MessageFromVNFInst, _impl_.msg_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::message::MonitorReportMessage, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::message::MonitorReportMessage, _impl_.cc_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::message::SFCMessage, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::message::SFCMessage, _impl_.sfcjson_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::message::TxnReqMessage, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::message::TxnReqMessage, _impl_.cc_),
    PROTOBUF_FIELD_OFFSET(::message::TxnReqMessage, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::message::TxnReqMessage, _impl_.saidx_),
    PROTOBUF_FIELD_OFFSET(::message::TxnReqMessage, _impl_.key_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::message::MessageFromStateManager)},
        {17, -1, -1, sizeof(::message::PauseMessage)},
        {25, -1, -1, sizeof(::message::ContinueMessage)},
        {33, -1, -1, sizeof(::message::TxnDoneMessage)},
        {42, -1, -1, sizeof(::message::getCCMessage)},
        {51, -1, -1, sizeof(::message::setCCMessage)},
        {61, -1, -1, sizeof(::message::getDSMessage)},
        {70, 80, -1, sizeof(::message::setDSMessage)},
        {82, 94, -1, sizeof(::message::UDFReadyMessage)},
        {98, 110, -1, sizeof(::message::UDFResponse)},
        {114, -1, -1, sizeof(::message::MessageFromVNFInst)},
        {128, -1, -1, sizeof(::message::MonitorReportMessage)},
        {137, -1, -1, sizeof(::message::SFCMessage)},
        {146, -1, -1, sizeof(::message::TxnReqMessage)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::message::_MessageFromStateManager_default_instance_._instance,
    &::message::_PauseMessage_default_instance_._instance,
    &::message::_ContinueMessage_default_instance_._instance,
    &::message::_TxnDoneMessage_default_instance_._instance,
    &::message::_getCCMessage_default_instance_._instance,
    &::message::_setCCMessage_default_instance_._instance,
    &::message::_getDSMessage_default_instance_._instance,
    &::message::_setDSMessage_default_instance_._instance,
    &::message::_UDFReadyMessage_default_instance_._instance,
    &::message::_UDFResponse_default_instance_._instance,
    &::message::_MessageFromVNFInst_default_instance_._instance,
    &::message::_MonitorReportMessage_default_instance_._instance,
    &::message::_SFCMessage_default_instance_._instance,
    &::message::_TxnReqMessage_default_instance_._instance,
};
const char descriptor_table_protodef_message_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\rmessage.proto\022\007message\"\243\003\n\027MessageFrom"
    "StateManager\0221\n\016txnDoneMessage\030\001 \001(\0132\027.m"
    "essage.TxnDoneMessageH\000\022-\n\014getCCMessage\030"
    "\002 \001(\0132\025.message.getCCMessageH\000\022-\n\014setCCM"
    "essage\030\003 \001(\0132\025.message.setCCMessageH\000\022-\n"
    "\014getDSMessage\030\004 \001(\0132\025.message.getDSMessa"
    "geH\000\022-\n\014setDSMessage\030\005 \001(\0132\025.message.set"
    "DSMessageH\000\022.\n\nudfMessage\030\006 \001(\0132\030.messag"
    "e.UDFReadyMessageH\000\022-\n\014pauseMessage\030\007 \001("
    "\0132\025.message.PauseMessageH\000\0223\n\017continueMe"
    "ssage\030\010 \001(\0132\030.message.ContinueMessageH\000B"
    "\005\n\003msg\"\016\n\014PauseMessage\"\021\n\017ContinueMessag"
    "e\"\034\n\016TxnDoneMessage\022\n\n\002id\030\001 \001(\004\"\033\n\014getCC"
    "Message\022\013\n\003key\030\001 \001(\005\"4\n\014setCCMessage\022\013\n\003"
    "key\030\001 \001(\005\022\027\n\002cc\030\002 \001(\0162\013.message.CC\"\033\n\014ge"
    "tDSMessage\022\013\n\003key\030\001 \001(\005\"9\n\014setDSMessage\022"
    "\013\n\003key\030\001 \001(\005\022\022\n\005value\030\002 \001(\005H\000\210\001\001B\010\n\006_val"
    "ue\"d\n\017UDFReadyMessage\022\n\n\002id\030\001 \001(\004\022\r\n\005saI"
    "dx\030\002 \001(\005\022\020\n\003key\030\003 \001(\005H\000\210\001\001\022\022\n\005value\030\004 \001("
    "\005H\001\210\001\001B\006\n\004_keyB\010\n\006_value\"`\n\013UDFResponse\022"
    "\n\n\002id\030\001 \001(\004\022\r\n\005saIdx\030\002 \001(\005\022\020\n\003key\030\003 \001(\005H"
    "\000\210\001\001\022\022\n\005value\030\004 \001(\005H\001\210\001\001B\006\n\004_keyB\010\n\006_val"
    "ue\"\226\002\n\022MessageFromVNFInst\022=\n\024monitorRepo"
    "rtMessage\030\001 \001(\0132\035.message.MonitorReportM"
    "essageH\000\022)\n\nsfcMessage\030\002 \001(\0132\023.message.S"
    "FCMessageH\000\022/\n\rtxnReqMessage\030\003 \001(\0132\026.mes"
    "sage.TxnReqMessageH\000\022.\n\rpushCCMessage\030\004 "
    "\001(\0132\025.message.setCCMessageH\000\022.\n\rpushDSMe"
    "ssage\030\005 \001(\0132\025.message.setDSMessageH\000B\005\n\003"
    "msg\"/\n\024MonitorReportMessage\022\027\n\002cc\030\001 \001(\0162"
    "\013.message.CC\"\035\n\nSFCMessage\022\017\n\007SFCJson\030\001 "
    "\001(\t\"P\n\rTxnReqMessage\022\027\n\002cc\030\001 \001(\0162\013.messa"
    "ge.CC\022\n\n\002id\030\002 \001(\004\022\r\n\005saIdx\030\003 \001(\005\022\013\n\003key\030"
    "\004 \001(\005*;\n\002CC\022\r\n\tPARTITION\020\000\022\t\n\005CACHE\020\001\022\013\n"
    "\007OFFLOAD\020\002\022\016\n\nPREEMPTIVE\020\003B\002P\001b\006proto3"
};
static ::absl::once_flag descriptor_table_message_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_message_2eproto = {
    false,
    false,
    1398,
    descriptor_table_protodef_message_2eproto,
    "message.proto",
    &descriptor_table_message_2eproto_once,
    nullptr,
    0,
    14,
    schemas,
    file_default_instances,
    TableStruct_message_2eproto::offsets,
    file_level_metadata_message_2eproto,
    file_level_enum_descriptors_message_2eproto,
    file_level_service_descriptors_message_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_message_2eproto_getter() {
  return &descriptor_table_message_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_message_2eproto(&descriptor_table_message_2eproto);
namespace message {
const ::google::protobuf::EnumDescriptor* CC_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_message_2eproto);
  return file_level_enum_descriptors_message_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t CC_internal_data_[] = {
    262144u, 0u, };
bool CC_IsValid(int value) {
  return 0 <= value && value <= 3;
}
// ===================================================================

class MessageFromStateManager::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::message::MessageFromStateManager, _impl_._oneof_case_);
  static const ::message::TxnDoneMessage& txndonemessage(const MessageFromStateManager* msg);
  static const ::message::getCCMessage& getccmessage(const MessageFromStateManager* msg);
  static const ::message::setCCMessage& setccmessage(const MessageFromStateManager* msg);
  static const ::message::getDSMessage& getdsmessage(const MessageFromStateManager* msg);
  static const ::message::setDSMessage& setdsmessage(const MessageFromStateManager* msg);
  static const ::message::UDFReadyMessage& udfmessage(const MessageFromStateManager* msg);
  static const ::message::PauseMessage& pausemessage(const MessageFromStateManager* msg);
  static const ::message::ContinueMessage& continuemessage(const MessageFromStateManager* msg);
};

const ::message::TxnDoneMessage& MessageFromStateManager::_Internal::txndonemessage(const MessageFromStateManager* msg) {
  return *msg->_impl_.msg_.txndonemessage_;
}
const ::message::getCCMessage& MessageFromStateManager::_Internal::getccmessage(const MessageFromStateManager* msg) {
  return *msg->_impl_.msg_.getccmessage_;
}
const ::message::setCCMessage& MessageFromStateManager::_Internal::setccmessage(const MessageFromStateManager* msg) {
  return *msg->_impl_.msg_.setccmessage_;
}
const ::message::getDSMessage& MessageFromStateManager::_Internal::getdsmessage(const MessageFromStateManager* msg) {
  return *msg->_impl_.msg_.getdsmessage_;
}
const ::message::setDSMessage& MessageFromStateManager::_Internal::setdsmessage(const MessageFromStateManager* msg) {
  return *msg->_impl_.msg_.setdsmessage_;
}
const ::message::UDFReadyMessage& MessageFromStateManager::_Internal::udfmessage(const MessageFromStateManager* msg) {
  return *msg->_impl_.msg_.udfmessage_;
}
const ::message::PauseMessage& MessageFromStateManager::_Internal::pausemessage(const MessageFromStateManager* msg) {
  return *msg->_impl_.msg_.pausemessage_;
}
const ::message::ContinueMessage& MessageFromStateManager::_Internal::continuemessage(const MessageFromStateManager* msg) {
  return *msg->_impl_.msg_.continuemessage_;
}
void MessageFromStateManager::set_allocated_txndonemessage(::message::TxnDoneMessage* txndonemessage) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_msg();
  if (txndonemessage) {
    ::google::protobuf::Arena* submessage_arena = txndonemessage->GetArena();
    if (message_arena != submessage_arena) {
      txndonemessage = ::google::protobuf::internal::GetOwnedMessage(message_arena, txndonemessage, submessage_arena);
    }
    set_has_txndonemessage();
    _impl_.msg_.txndonemessage_ = txndonemessage;
  }
  // @@protoc_insertion_point(field_set_allocated:message.MessageFromStateManager.txnDoneMessage)
}
void MessageFromStateManager::set_allocated_getccmessage(::message::getCCMessage* getccmessage) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_msg();
  if (getccmessage) {
    ::google::protobuf::Arena* submessage_arena = getccmessage->GetArena();
    if (message_arena != submessage_arena) {
      getccmessage = ::google::protobuf::internal::GetOwnedMessage(message_arena, getccmessage, submessage_arena);
    }
    set_has_getccmessage();
    _impl_.msg_.getccmessage_ = getccmessage;
  }
  // @@protoc_insertion_point(field_set_allocated:message.MessageFromStateManager.getCCMessage)
}
void MessageFromStateManager::set_allocated_setccmessage(::message::setCCMessage* setccmessage) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_msg();
  if (setccmessage) {
    ::google::protobuf::Arena* submessage_arena = setccmessage->GetArena();
    if (message_arena != submessage_arena) {
      setccmessage = ::google::protobuf::internal::GetOwnedMessage(message_arena, setccmessage, submessage_arena);
    }
    set_has_setccmessage();
    _impl_.msg_.setccmessage_ = setccmessage;
  }
  // @@protoc_insertion_point(field_set_allocated:message.MessageFromStateManager.setCCMessage)
}
void MessageFromStateManager::set_allocated_getdsmessage(::message::getDSMessage* getdsmessage) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_msg();
  if (getdsmessage) {
    ::google::protobuf::Arena* submessage_arena = getdsmessage->GetArena();
    if (message_arena != submessage_arena) {
      getdsmessage = ::google::protobuf::internal::GetOwnedMessage(message_arena, getdsmessage, submessage_arena);
    }
    set_has_getdsmessage();
    _impl_.msg_.getdsmessage_ = getdsmessage;
  }
  // @@protoc_insertion_point(field_set_allocated:message.MessageFromStateManager.getDSMessage)
}
void MessageFromStateManager::set_allocated_setdsmessage(::message::setDSMessage* setdsmessage) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_msg();
  if (setdsmessage) {
    ::google::protobuf::Arena* submessage_arena = setdsmessage->GetArena();
    if (message_arena != submessage_arena) {
      setdsmessage = ::google::protobuf::internal::GetOwnedMessage(message_arena, setdsmessage, submessage_arena);
    }
    set_has_setdsmessage();
    _impl_.msg_.setdsmessage_ = setdsmessage;
  }
  // @@protoc_insertion_point(field_set_allocated:message.MessageFromStateManager.setDSMessage)
}
void MessageFromStateManager::set_allocated_udfmessage(::message::UDFReadyMessage* udfmessage) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_msg();
  if (udfmessage) {
    ::google::protobuf::Arena* submessage_arena = udfmessage->GetArena();
    if (message_arena != submessage_arena) {
      udfmessage = ::google::protobuf::internal::GetOwnedMessage(message_arena, udfmessage, submessage_arena);
    }
    set_has_udfmessage();
    _impl_.msg_.udfmessage_ = udfmessage;
  }
  // @@protoc_insertion_point(field_set_allocated:message.MessageFromStateManager.udfMessage)
}
void MessageFromStateManager::set_allocated_pausemessage(::message::PauseMessage* pausemessage) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_msg();
  if (pausemessage) {
    ::google::protobuf::Arena* submessage_arena = pausemessage->GetArena();
    if (message_arena != submessage_arena) {
      pausemessage = ::google::protobuf::internal::GetOwnedMessage(message_arena, pausemessage, submessage_arena);
    }
    set_has_pausemessage();
    _impl_.msg_.pausemessage_ = pausemessage;
  }
  // @@protoc_insertion_point(field_set_allocated:message.MessageFromStateManager.pauseMessage)
}
void MessageFromStateManager::set_allocated_continuemessage(::message::ContinueMessage* continuemessage) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_msg();
  if (continuemessage) {
    ::google::protobuf::Arena* submessage_arena = continuemessage->GetArena();
    if (message_arena != submessage_arena) {
      continuemessage = ::google::protobuf::internal::GetOwnedMessage(message_arena, continuemessage, submessage_arena);
    }
    set_has_continuemessage();
    _impl_.msg_.continuemessage_ = continuemessage;
  }
  // @@protoc_insertion_point(field_set_allocated:message.MessageFromStateManager.continueMessage)
}
MessageFromStateManager::MessageFromStateManager(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:message.MessageFromStateManager)
}
inline PROTOBUF_NDEBUG_INLINE MessageFromStateManager::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : msg_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

MessageFromStateManager::MessageFromStateManager(
    ::google::protobuf::Arena* arena,
    const MessageFromStateManager& from)
    : ::google::protobuf::Message(arena) {
  MessageFromStateManager* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  switch (msg_case()) {
    case MSG_NOT_SET:
      break;
      case kTxnDoneMessage:
        _impl_.msg_.txndonemessage_ = CreateMaybeMessage<::message::TxnDoneMessage>(arena, *from._impl_.msg_.txndonemessage_);
        break;
      case kGetCCMessage:
        _impl_.msg_.getccmessage_ = CreateMaybeMessage<::message::getCCMessage>(arena, *from._impl_.msg_.getccmessage_);
        break;
      case kSetCCMessage:
        _impl_.msg_.setccmessage_ = CreateMaybeMessage<::message::setCCMessage>(arena, *from._impl_.msg_.setccmessage_);
        break;
      case kGetDSMessage:
        _impl_.msg_.getdsmessage_ = CreateMaybeMessage<::message::getDSMessage>(arena, *from._impl_.msg_.getdsmessage_);
        break;
      case kSetDSMessage:
        _impl_.msg_.setdsmessage_ = CreateMaybeMessage<::message::setDSMessage>(arena, *from._impl_.msg_.setdsmessage_);
        break;
      case kUdfMessage:
        _impl_.msg_.udfmessage_ = CreateMaybeMessage<::message::UDFReadyMessage>(arena, *from._impl_.msg_.udfmessage_);
        break;
      case kPauseMessage:
        _impl_.msg_.pausemessage_ = CreateMaybeMessage<::message::PauseMessage>(arena, *from._impl_.msg_.pausemessage_);
        break;
      case kContinueMessage:
        _impl_.msg_.continuemessage_ = CreateMaybeMessage<::message::ContinueMessage>(arena, *from._impl_.msg_.continuemessage_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:message.MessageFromStateManager)
}
inline PROTOBUF_NDEBUG_INLINE MessageFromStateManager::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : msg_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void MessageFromStateManager::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
MessageFromStateManager::~MessageFromStateManager() {
  // @@protoc_insertion_point(destructor:message.MessageFromStateManager)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void MessageFromStateManager::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (has_msg()) {
    clear_msg();
  }
  _impl_.~Impl_();
}

void MessageFromStateManager::clear_msg() {
// @@protoc_insertion_point(one_of_clear_start:message.MessageFromStateManager)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (msg_case()) {
    case kTxnDoneMessage: {
      if (GetArena() == nullptr) {
        delete _impl_.msg_.txndonemessage_;
      }
      break;
    }
    case kGetCCMessage: {
      if (GetArena() == nullptr) {
        delete _impl_.msg_.getccmessage_;
      }
      break;
    }
    case kSetCCMessage: {
      if (GetArena() == nullptr) {
        delete _impl_.msg_.setccmessage_;
      }
      break;
    }
    case kGetDSMessage: {
      if (GetArena() == nullptr) {
        delete _impl_.msg_.getdsmessage_;
      }
      break;
    }
    case kSetDSMessage: {
      if (GetArena() == nullptr) {
        delete _impl_.msg_.setdsmessage_;
      }
      break;
    }
    case kUdfMessage: {
      if (GetArena() == nullptr) {
        delete _impl_.msg_.udfmessage_;
      }
      break;
    }
    case kPauseMessage: {
      if (GetArena() == nullptr) {
        delete _impl_.msg_.pausemessage_;
      }
      break;
    }
    case kContinueMessage: {
      if (GetArena() == nullptr) {
        delete _impl_.msg_.continuemessage_;
      }
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = MSG_NOT_SET;
}


PROTOBUF_NOINLINE void MessageFromStateManager::Clear() {
// @@protoc_insertion_point(message_clear_start:message.MessageFromStateManager)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_msg();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* MessageFromStateManager::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 8, 8, 0, 2> MessageFromStateManager::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    8, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    8,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_MessageFromStateManager_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .message.TxnDoneMessage txnDoneMessage = 1;
    {PROTOBUF_FIELD_OFFSET(MessageFromStateManager, _impl_.msg_.txndonemessage_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .message.getCCMessage getCCMessage = 2;
    {PROTOBUF_FIELD_OFFSET(MessageFromStateManager, _impl_.msg_.getccmessage_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .message.setCCMessage setCCMessage = 3;
    {PROTOBUF_FIELD_OFFSET(MessageFromStateManager, _impl_.msg_.setccmessage_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .message.getDSMessage getDSMessage = 4;
    {PROTOBUF_FIELD_OFFSET(MessageFromStateManager, _impl_.msg_.getdsmessage_), _Internal::kOneofCaseOffset + 0, 3,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .message.setDSMessage setDSMessage = 5;
    {PROTOBUF_FIELD_OFFSET(MessageFromStateManager, _impl_.msg_.setdsmessage_), _Internal::kOneofCaseOffset + 0, 4,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .message.UDFReadyMessage udfMessage = 6;
    {PROTOBUF_FIELD_OFFSET(MessageFromStateManager, _impl_.msg_.udfmessage_), _Internal::kOneofCaseOffset + 0, 5,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .message.PauseMessage pauseMessage = 7;
    {PROTOBUF_FIELD_OFFSET(MessageFromStateManager, _impl_.msg_.pausemessage_), _Internal::kOneofCaseOffset + 0, 6,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvDefault)},
    // .message.ContinueMessage continueMessage = 8;
    {PROTOBUF_FIELD_OFFSET(MessageFromStateManager, _impl_.msg_.continuemessage_), _Internal::kOneofCaseOffset + 0, 7,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvDefault)},
  }}, {{
    {::_pbi::TcParser::GetTable<::message::TxnDoneMessage>()},
    {::_pbi::TcParser::GetTable<::message::getCCMessage>()},
    {::_pbi::TcParser::GetTable<::message::setCCMessage>()},
    {::_pbi::TcParser::GetTable<::message::getDSMessage>()},
    {::_pbi::TcParser::GetTable<::message::setDSMessage>()},
    {::_pbi::TcParser::GetTable<::message::UDFReadyMessage>()},
    {::_pbi::FieldAuxDefaultMessage{}, &::message::_PauseMessage_default_instance_},
    {::_pbi::FieldAuxDefaultMessage{}, &::message::_ContinueMessage_default_instance_},
  }}, {{
  }},
};

::uint8_t* MessageFromStateManager::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.MessageFromStateManager)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (msg_case()) {
    case kTxnDoneMessage: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          1, _Internal::txndonemessage(this),
          _Internal::txndonemessage(this).GetCachedSize(), target, stream);
      break;
    }
    case kGetCCMessage: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, _Internal::getccmessage(this),
          _Internal::getccmessage(this).GetCachedSize(), target, stream);
      break;
    }
    case kSetCCMessage: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          3, _Internal::setccmessage(this),
          _Internal::setccmessage(this).GetCachedSize(), target, stream);
      break;
    }
    case kGetDSMessage: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          4, _Internal::getdsmessage(this),
          _Internal::getdsmessage(this).GetCachedSize(), target, stream);
      break;
    }
    case kSetDSMessage: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          5, _Internal::setdsmessage(this),
          _Internal::setdsmessage(this).GetCachedSize(), target, stream);
      break;
    }
    case kUdfMessage: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          6, _Internal::udfmessage(this),
          _Internal::udfmessage(this).GetCachedSize(), target, stream);
      break;
    }
    case kPauseMessage: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          7, _Internal::pausemessage(this),
          _Internal::pausemessage(this).GetCachedSize(), target, stream);
      break;
    }
    case kContinueMessage: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          8, _Internal::continuemessage(this),
          _Internal::continuemessage(this).GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.MessageFromStateManager)
  return target;
}

::size_t MessageFromStateManager::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:message.MessageFromStateManager)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (msg_case()) {
    // .message.TxnDoneMessage txnDoneMessage = 1;
    case kTxnDoneMessage: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.msg_.txndonemessage_);
      break;
    }
    // .message.getCCMessage getCCMessage = 2;
    case kGetCCMessage: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.msg_.getccmessage_);
      break;
    }
    // .message.setCCMessage setCCMessage = 3;
    case kSetCCMessage: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.msg_.setccmessage_);
      break;
    }
    // .message.getDSMessage getDSMessage = 4;
    case kGetDSMessage: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.msg_.getdsmessage_);
      break;
    }
    // .message.setDSMessage setDSMessage = 5;
    case kSetDSMessage: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.msg_.setdsmessage_);
      break;
    }
    // .message.UDFReadyMessage udfMessage = 6;
    case kUdfMessage: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.msg_.udfmessage_);
      break;
    }
    // .message.PauseMessage pauseMessage = 7;
    case kPauseMessage: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.msg_.pausemessage_);
      break;
    }
    // .message.ContinueMessage continueMessage = 8;
    case kContinueMessage: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.msg_.continuemessage_);
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData MessageFromStateManager::_class_data_ = {
    MessageFromStateManager::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* MessageFromStateManager::GetClassData() const {
  return &_class_data_;
}

void MessageFromStateManager::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<MessageFromStateManager*>(&to_msg);
  auto& from = static_cast<const MessageFromStateManager&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:message.MessageFromStateManager)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.msg_case()) {
    case kTxnDoneMessage: {
      _this->_internal_mutable_txndonemessage()->::message::TxnDoneMessage::MergeFrom(
          from._internal_txndonemessage());
      break;
    }
    case kGetCCMessage: {
      _this->_internal_mutable_getccmessage()->::message::getCCMessage::MergeFrom(
          from._internal_getccmessage());
      break;
    }
    case kSetCCMessage: {
      _this->_internal_mutable_setccmessage()->::message::setCCMessage::MergeFrom(
          from._internal_setccmessage());
      break;
    }
    case kGetDSMessage: {
      _this->_internal_mutable_getdsmessage()->::message::getDSMessage::MergeFrom(
          from._internal_getdsmessage());
      break;
    }
    case kSetDSMessage: {
      _this->_internal_mutable_setdsmessage()->::message::setDSMessage::MergeFrom(
          from._internal_setdsmessage());
      break;
    }
    case kUdfMessage: {
      _this->_internal_mutable_udfmessage()->::message::UDFReadyMessage::MergeFrom(
          from._internal_udfmessage());
      break;
    }
    case kPauseMessage: {
      _this->_internal_mutable_pausemessage()->::message::PauseMessage::MergeFrom(
          from._internal_pausemessage());
      break;
    }
    case kContinueMessage: {
      _this->_internal_mutable_continuemessage()->::message::ContinueMessage::MergeFrom(
          from._internal_continuemessage());
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MessageFromStateManager::CopyFrom(const MessageFromStateManager& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:message.MessageFromStateManager)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool MessageFromStateManager::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* MessageFromStateManager::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void MessageFromStateManager::InternalSwap(MessageFromStateManager* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.msg_, other->_impl_.msg_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata MessageFromStateManager::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_message_2eproto_getter, &descriptor_table_message_2eproto_once,
      file_level_metadata_message_2eproto[0]);
}
// ===================================================================

class PauseMessage::_Internal {
 public:
};

PauseMessage::PauseMessage(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:message.PauseMessage)
}
PauseMessage::PauseMessage(
    ::google::protobuf::Arena* arena,
    const PauseMessage& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  PauseMessage* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:message.PauseMessage)
}









::google::protobuf::Metadata PauseMessage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_message_2eproto_getter, &descriptor_table_message_2eproto_once,
      file_level_metadata_message_2eproto[1]);
}
// ===================================================================

class ContinueMessage::_Internal {
 public:
};

ContinueMessage::ContinueMessage(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:message.ContinueMessage)
}
ContinueMessage::ContinueMessage(
    ::google::protobuf::Arena* arena,
    const ContinueMessage& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  ContinueMessage* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:message.ContinueMessage)
}









::google::protobuf::Metadata ContinueMessage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_message_2eproto_getter, &descriptor_table_message_2eproto_once,
      file_level_metadata_message_2eproto[2]);
}
// ===================================================================

class TxnDoneMessage::_Internal {
 public:
};

TxnDoneMessage::TxnDoneMessage(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:message.TxnDoneMessage)
}
TxnDoneMessage::TxnDoneMessage(
    ::google::protobuf::Arena* arena, const TxnDoneMessage& from)
    : TxnDoneMessage(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE TxnDoneMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void TxnDoneMessage::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.id_ = {};
}
TxnDoneMessage::~TxnDoneMessage() {
  // @@protoc_insertion_point(destructor:message.TxnDoneMessage)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TxnDoneMessage::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void TxnDoneMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:message.TxnDoneMessage)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TxnDoneMessage::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> TxnDoneMessage::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_TxnDoneMessage_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // uint64 id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(TxnDoneMessage, _impl_.id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(TxnDoneMessage, _impl_.id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 id = 1;
    {PROTOBUF_FIELD_OFFSET(TxnDoneMessage, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* TxnDoneMessage::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.TxnDoneMessage)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint64 id = 1;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.TxnDoneMessage)
  return target;
}

::size_t TxnDoneMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:message.TxnDoneMessage)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TxnDoneMessage::_class_data_ = {
    TxnDoneMessage::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* TxnDoneMessage::GetClassData() const {
  return &_class_data_;
}

void TxnDoneMessage::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TxnDoneMessage*>(&to_msg);
  auto& from = static_cast<const TxnDoneMessage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:message.TxnDoneMessage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_id() != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TxnDoneMessage::CopyFrom(const TxnDoneMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:message.TxnDoneMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TxnDoneMessage::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* TxnDoneMessage::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void TxnDoneMessage::InternalSwap(TxnDoneMessage* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.id_, other->_impl_.id_);
}

::google::protobuf::Metadata TxnDoneMessage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_message_2eproto_getter, &descriptor_table_message_2eproto_once,
      file_level_metadata_message_2eproto[3]);
}
// ===================================================================

class getCCMessage::_Internal {
 public:
};

getCCMessage::getCCMessage(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:message.getCCMessage)
}
getCCMessage::getCCMessage(
    ::google::protobuf::Arena* arena, const getCCMessage& from)
    : getCCMessage(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE getCCMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void getCCMessage::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.key_ = {};
}
getCCMessage::~getCCMessage() {
  // @@protoc_insertion_point(destructor:message.getCCMessage)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void getCCMessage::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void getCCMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:message.getCCMessage)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.key_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* getCCMessage::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> getCCMessage::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_getCCMessage_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int32 key = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(getCCMessage, _impl_.key_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(getCCMessage, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 key = 1;
    {PROTOBUF_FIELD_OFFSET(getCCMessage, _impl_.key_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* getCCMessage::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.getCCMessage)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 key = 1;
  if (this->_internal_key() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_key(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.getCCMessage)
  return target;
}

::size_t getCCMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:message.getCCMessage)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 key = 1;
  if (this->_internal_key() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_key());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData getCCMessage::_class_data_ = {
    getCCMessage::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* getCCMessage::GetClassData() const {
  return &_class_data_;
}

void getCCMessage::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<getCCMessage*>(&to_msg);
  auto& from = static_cast<const getCCMessage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:message.getCCMessage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_key() != 0) {
    _this->_internal_set_key(from._internal_key());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void getCCMessage::CopyFrom(const getCCMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:message.getCCMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool getCCMessage::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* getCCMessage::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void getCCMessage::InternalSwap(getCCMessage* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.key_, other->_impl_.key_);
}

::google::protobuf::Metadata getCCMessage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_message_2eproto_getter, &descriptor_table_message_2eproto_once,
      file_level_metadata_message_2eproto[4]);
}
// ===================================================================

class setCCMessage::_Internal {
 public:
};

setCCMessage::setCCMessage(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:message.setCCMessage)
}
setCCMessage::setCCMessage(
    ::google::protobuf::Arena* arena, const setCCMessage& from)
    : setCCMessage(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE setCCMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void setCCMessage::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, key_),
           0,
           offsetof(Impl_, cc_) -
               offsetof(Impl_, key_) +
               sizeof(Impl_::cc_));
}
setCCMessage::~setCCMessage() {
  // @@protoc_insertion_point(destructor:message.setCCMessage)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void setCCMessage::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void setCCMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:message.setCCMessage)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.key_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.cc_) -
      reinterpret_cast<char*>(&_impl_.key_)) + sizeof(_impl_.cc_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* setCCMessage::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> setCCMessage::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_setCCMessage_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .message.CC cc = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(setCCMessage, _impl_.cc_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(setCCMessage, _impl_.cc_)}},
    // int32 key = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(setCCMessage, _impl_.key_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(setCCMessage, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 key = 1;
    {PROTOBUF_FIELD_OFFSET(setCCMessage, _impl_.key_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // .message.CC cc = 2;
    {PROTOBUF_FIELD_OFFSET(setCCMessage, _impl_.cc_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* setCCMessage::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.setCCMessage)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 key = 1;
  if (this->_internal_key() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_key(), target);
  }

  // .message.CC cc = 2;
  if (this->_internal_cc() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_cc(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.setCCMessage)
  return target;
}

::size_t setCCMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:message.setCCMessage)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 key = 1;
  if (this->_internal_key() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_key());
  }

  // .message.CC cc = 2;
  if (this->_internal_cc() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_cc());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData setCCMessage::_class_data_ = {
    setCCMessage::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* setCCMessage::GetClassData() const {
  return &_class_data_;
}

void setCCMessage::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<setCCMessage*>(&to_msg);
  auto& from = static_cast<const setCCMessage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:message.setCCMessage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_key() != 0) {
    _this->_internal_set_key(from._internal_key());
  }
  if (from._internal_cc() != 0) {
    _this->_internal_set_cc(from._internal_cc());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void setCCMessage::CopyFrom(const setCCMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:message.setCCMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool setCCMessage::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* setCCMessage::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void setCCMessage::InternalSwap(setCCMessage* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(setCCMessage, _impl_.cc_)
      + sizeof(setCCMessage::_impl_.cc_)
      - PROTOBUF_FIELD_OFFSET(setCCMessage, _impl_.key_)>(
          reinterpret_cast<char*>(&_impl_.key_),
          reinterpret_cast<char*>(&other->_impl_.key_));
}

::google::protobuf::Metadata setCCMessage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_message_2eproto_getter, &descriptor_table_message_2eproto_once,
      file_level_metadata_message_2eproto[5]);
}
// ===================================================================

class getDSMessage::_Internal {
 public:
};

getDSMessage::getDSMessage(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:message.getDSMessage)
}
getDSMessage::getDSMessage(
    ::google::protobuf::Arena* arena, const getDSMessage& from)
    : getDSMessage(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE getDSMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void getDSMessage::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.key_ = {};
}
getDSMessage::~getDSMessage() {
  // @@protoc_insertion_point(destructor:message.getDSMessage)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void getDSMessage::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void getDSMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:message.getDSMessage)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.key_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* getDSMessage::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> getDSMessage::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_getDSMessage_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int32 key = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(getDSMessage, _impl_.key_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(getDSMessage, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 key = 1;
    {PROTOBUF_FIELD_OFFSET(getDSMessage, _impl_.key_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* getDSMessage::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.getDSMessage)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 key = 1;
  if (this->_internal_key() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_key(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.getDSMessage)
  return target;
}

::size_t getDSMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:message.getDSMessage)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 key = 1;
  if (this->_internal_key() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_key());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData getDSMessage::_class_data_ = {
    getDSMessage::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* getDSMessage::GetClassData() const {
  return &_class_data_;
}

void getDSMessage::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<getDSMessage*>(&to_msg);
  auto& from = static_cast<const getDSMessage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:message.getDSMessage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_key() != 0) {
    _this->_internal_set_key(from._internal_key());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void getDSMessage::CopyFrom(const getDSMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:message.getDSMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool getDSMessage::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* getDSMessage::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void getDSMessage::InternalSwap(getDSMessage* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.key_, other->_impl_.key_);
}

::google::protobuf::Metadata getDSMessage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_message_2eproto_getter, &descriptor_table_message_2eproto_once,
      file_level_metadata_message_2eproto[6]);
}
// ===================================================================

class setDSMessage::_Internal {
 public:
  using HasBits = decltype(std::declval<setDSMessage>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(setDSMessage, _impl_._has_bits_);
  static void set_has_value(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

setDSMessage::setDSMessage(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:message.setDSMessage)
}
setDSMessage::setDSMessage(
    ::google::protobuf::Arena* arena, const setDSMessage& from)
    : setDSMessage(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE setDSMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void setDSMessage::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, key_),
           0,
           offsetof(Impl_, value_) -
               offsetof(Impl_, key_) +
               sizeof(Impl_::value_));
}
setDSMessage::~setDSMessage() {
  // @@protoc_insertion_point(destructor:message.setDSMessage)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void setDSMessage::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void setDSMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:message.setDSMessage)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.key_ = 0;
  _impl_.value_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* setDSMessage::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> setDSMessage::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(setDSMessage, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_setDSMessage_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional int32 value = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(setDSMessage, _impl_.value_), 0>(),
     {16, 0, 0, PROTOBUF_FIELD_OFFSET(setDSMessage, _impl_.value_)}},
    // int32 key = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(setDSMessage, _impl_.key_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(setDSMessage, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 key = 1;
    {PROTOBUF_FIELD_OFFSET(setDSMessage, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // optional int32 value = 2;
    {PROTOBUF_FIELD_OFFSET(setDSMessage, _impl_.value_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* setDSMessage::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.setDSMessage)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 key = 1;
  if (this->_internal_key() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_key(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 value = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.setDSMessage)
  return target;
}

::size_t setDSMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:message.setDSMessage)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 key = 1;
  if (this->_internal_key() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_key());
  }

  // optional int32 value = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_value());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData setDSMessage::_class_data_ = {
    setDSMessage::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* setDSMessage::GetClassData() const {
  return &_class_data_;
}

void setDSMessage::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<setDSMessage*>(&to_msg);
  auto& from = static_cast<const setDSMessage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:message.setDSMessage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_key() != 0) {
    _this->_internal_set_key(from._internal_key());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_value(from._internal_value());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void setDSMessage::CopyFrom(const setDSMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:message.setDSMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool setDSMessage::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* setDSMessage::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void setDSMessage::InternalSwap(setDSMessage* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(setDSMessage, _impl_.value_)
      + sizeof(setDSMessage::_impl_.value_)
      - PROTOBUF_FIELD_OFFSET(setDSMessage, _impl_.key_)>(
          reinterpret_cast<char*>(&_impl_.key_),
          reinterpret_cast<char*>(&other->_impl_.key_));
}

::google::protobuf::Metadata setDSMessage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_message_2eproto_getter, &descriptor_table_message_2eproto_once,
      file_level_metadata_message_2eproto[7]);
}
// ===================================================================

class UDFReadyMessage::_Internal {
 public:
  using HasBits = decltype(std::declval<UDFReadyMessage>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(UDFReadyMessage, _impl_._has_bits_);
  static void set_has_key(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_value(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

UDFReadyMessage::UDFReadyMessage(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:message.UDFReadyMessage)
}
UDFReadyMessage::UDFReadyMessage(
    ::google::protobuf::Arena* arena, const UDFReadyMessage& from)
    : UDFReadyMessage(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE UDFReadyMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void UDFReadyMessage::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           0,
           offsetof(Impl_, value_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::value_));
}
UDFReadyMessage::~UDFReadyMessage() {
  // @@protoc_insertion_point(destructor:message.UDFReadyMessage)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void UDFReadyMessage::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void UDFReadyMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:message.UDFReadyMessage)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.saidx_) -
      reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.saidx_));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.key_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.value_) -
        reinterpret_cast<char*>(&_impl_.key_)) + sizeof(_impl_.value_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* UDFReadyMessage::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2> UDFReadyMessage::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UDFReadyMessage, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_UDFReadyMessage_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional int32 value = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(UDFReadyMessage, _impl_.value_), 1>(),
     {32, 1, 0, PROTOBUF_FIELD_OFFSET(UDFReadyMessage, _impl_.value_)}},
    // uint64 id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(UDFReadyMessage, _impl_.id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(UDFReadyMessage, _impl_.id_)}},
    // int32 saIdx = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(UDFReadyMessage, _impl_.saidx_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(UDFReadyMessage, _impl_.saidx_)}},
    // optional int32 key = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(UDFReadyMessage, _impl_.key_), 0>(),
     {24, 0, 0, PROTOBUF_FIELD_OFFSET(UDFReadyMessage, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 id = 1;
    {PROTOBUF_FIELD_OFFSET(UDFReadyMessage, _impl_.id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // int32 saIdx = 2;
    {PROTOBUF_FIELD_OFFSET(UDFReadyMessage, _impl_.saidx_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // optional int32 key = 3;
    {PROTOBUF_FIELD_OFFSET(UDFReadyMessage, _impl_.key_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 value = 4;
    {PROTOBUF_FIELD_OFFSET(UDFReadyMessage, _impl_.value_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* UDFReadyMessage::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.UDFReadyMessage)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint64 id = 1;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_id(), target);
  }

  // int32 saIdx = 2;
  if (this->_internal_saidx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_saidx(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 key = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_key(), target);
  }

  // optional int32 value = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<4>(
            stream, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.UDFReadyMessage)
  return target;
}

::size_t UDFReadyMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:message.UDFReadyMessage)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_id());
  }

  // int32 saIdx = 2;
  if (this->_internal_saidx() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_saidx());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional int32 key = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_key());
    }

    // optional int32 value = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_value());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData UDFReadyMessage::_class_data_ = {
    UDFReadyMessage::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* UDFReadyMessage::GetClassData() const {
  return &_class_data_;
}

void UDFReadyMessage::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<UDFReadyMessage*>(&to_msg);
  auto& from = static_cast<const UDFReadyMessage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:message.UDFReadyMessage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_id() != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  if (from._internal_saidx() != 0) {
    _this->_internal_set_saidx(from._internal_saidx());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.key_ = from._impl_.key_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.value_ = from._impl_.value_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UDFReadyMessage::CopyFrom(const UDFReadyMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:message.UDFReadyMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool UDFReadyMessage::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* UDFReadyMessage::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void UDFReadyMessage::InternalSwap(UDFReadyMessage* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UDFReadyMessage, _impl_.value_)
      + sizeof(UDFReadyMessage::_impl_.value_)
      - PROTOBUF_FIELD_OFFSET(UDFReadyMessage, _impl_.id_)>(
          reinterpret_cast<char*>(&_impl_.id_),
          reinterpret_cast<char*>(&other->_impl_.id_));
}

::google::protobuf::Metadata UDFReadyMessage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_message_2eproto_getter, &descriptor_table_message_2eproto_once,
      file_level_metadata_message_2eproto[8]);
}
// ===================================================================

class UDFResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<UDFResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(UDFResponse, _impl_._has_bits_);
  static void set_has_key(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_value(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

UDFResponse::UDFResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:message.UDFResponse)
}
UDFResponse::UDFResponse(
    ::google::protobuf::Arena* arena, const UDFResponse& from)
    : UDFResponse(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE UDFResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void UDFResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           0,
           offsetof(Impl_, value_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::value_));
}
UDFResponse::~UDFResponse() {
  // @@protoc_insertion_point(destructor:message.UDFResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void UDFResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void UDFResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:message.UDFResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.saidx_) -
      reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.saidx_));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.key_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.value_) -
        reinterpret_cast<char*>(&_impl_.key_)) + sizeof(_impl_.value_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* UDFResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2> UDFResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UDFResponse, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_UDFResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional int32 value = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(UDFResponse, _impl_.value_), 1>(),
     {32, 1, 0, PROTOBUF_FIELD_OFFSET(UDFResponse, _impl_.value_)}},
    // uint64 id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(UDFResponse, _impl_.id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(UDFResponse, _impl_.id_)}},
    // int32 saIdx = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(UDFResponse, _impl_.saidx_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(UDFResponse, _impl_.saidx_)}},
    // optional int32 key = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(UDFResponse, _impl_.key_), 0>(),
     {24, 0, 0, PROTOBUF_FIELD_OFFSET(UDFResponse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 id = 1;
    {PROTOBUF_FIELD_OFFSET(UDFResponse, _impl_.id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // int32 saIdx = 2;
    {PROTOBUF_FIELD_OFFSET(UDFResponse, _impl_.saidx_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // optional int32 key = 3;
    {PROTOBUF_FIELD_OFFSET(UDFResponse, _impl_.key_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 value = 4;
    {PROTOBUF_FIELD_OFFSET(UDFResponse, _impl_.value_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* UDFResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.UDFResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint64 id = 1;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_id(), target);
  }

  // int32 saIdx = 2;
  if (this->_internal_saidx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_saidx(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 key = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_key(), target);
  }

  // optional int32 value = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<4>(
            stream, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.UDFResponse)
  return target;
}

::size_t UDFResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:message.UDFResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_id());
  }

  // int32 saIdx = 2;
  if (this->_internal_saidx() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_saidx());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional int32 key = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_key());
    }

    // optional int32 value = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_value());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData UDFResponse::_class_data_ = {
    UDFResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* UDFResponse::GetClassData() const {
  return &_class_data_;
}

void UDFResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<UDFResponse*>(&to_msg);
  auto& from = static_cast<const UDFResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:message.UDFResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_id() != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  if (from._internal_saidx() != 0) {
    _this->_internal_set_saidx(from._internal_saidx());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.key_ = from._impl_.key_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.value_ = from._impl_.value_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UDFResponse::CopyFrom(const UDFResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:message.UDFResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool UDFResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* UDFResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void UDFResponse::InternalSwap(UDFResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UDFResponse, _impl_.value_)
      + sizeof(UDFResponse::_impl_.value_)
      - PROTOBUF_FIELD_OFFSET(UDFResponse, _impl_.id_)>(
          reinterpret_cast<char*>(&_impl_.id_),
          reinterpret_cast<char*>(&other->_impl_.id_));
}

::google::protobuf::Metadata UDFResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_message_2eproto_getter, &descriptor_table_message_2eproto_once,
      file_level_metadata_message_2eproto[9]);
}
// ===================================================================

class MessageFromVNFInst::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::message::MessageFromVNFInst, _impl_._oneof_case_);
  static const ::message::MonitorReportMessage& monitorreportmessage(const MessageFromVNFInst* msg);
  static const ::message::SFCMessage& sfcmessage(const MessageFromVNFInst* msg);
  static const ::message::TxnReqMessage& txnreqmessage(const MessageFromVNFInst* msg);
  static const ::message::setCCMessage& pushccmessage(const MessageFromVNFInst* msg);
  static const ::message::setDSMessage& pushdsmessage(const MessageFromVNFInst* msg);
};

const ::message::MonitorReportMessage& MessageFromVNFInst::_Internal::monitorreportmessage(const MessageFromVNFInst* msg) {
  return *msg->_impl_.msg_.monitorreportmessage_;
}
const ::message::SFCMessage& MessageFromVNFInst::_Internal::sfcmessage(const MessageFromVNFInst* msg) {
  return *msg->_impl_.msg_.sfcmessage_;
}
const ::message::TxnReqMessage& MessageFromVNFInst::_Internal::txnreqmessage(const MessageFromVNFInst* msg) {
  return *msg->_impl_.msg_.txnreqmessage_;
}
const ::message::setCCMessage& MessageFromVNFInst::_Internal::pushccmessage(const MessageFromVNFInst* msg) {
  return *msg->_impl_.msg_.pushccmessage_;
}
const ::message::setDSMessage& MessageFromVNFInst::_Internal::pushdsmessage(const MessageFromVNFInst* msg) {
  return *msg->_impl_.msg_.pushdsmessage_;
}
void MessageFromVNFInst::set_allocated_monitorreportmessage(::message::MonitorReportMessage* monitorreportmessage) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_msg();
  if (monitorreportmessage) {
    ::google::protobuf::Arena* submessage_arena = monitorreportmessage->GetArena();
    if (message_arena != submessage_arena) {
      monitorreportmessage = ::google::protobuf::internal::GetOwnedMessage(message_arena, monitorreportmessage, submessage_arena);
    }
    set_has_monitorreportmessage();
    _impl_.msg_.monitorreportmessage_ = monitorreportmessage;
  }
  // @@protoc_insertion_point(field_set_allocated:message.MessageFromVNFInst.monitorReportMessage)
}
void MessageFromVNFInst::set_allocated_sfcmessage(::message::SFCMessage* sfcmessage) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_msg();
  if (sfcmessage) {
    ::google::protobuf::Arena* submessage_arena = sfcmessage->GetArena();
    if (message_arena != submessage_arena) {
      sfcmessage = ::google::protobuf::internal::GetOwnedMessage(message_arena, sfcmessage, submessage_arena);
    }
    set_has_sfcmessage();
    _impl_.msg_.sfcmessage_ = sfcmessage;
  }
  // @@protoc_insertion_point(field_set_allocated:message.MessageFromVNFInst.sfcMessage)
}
void MessageFromVNFInst::set_allocated_txnreqmessage(::message::TxnReqMessage* txnreqmessage) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_msg();
  if (txnreqmessage) {
    ::google::protobuf::Arena* submessage_arena = txnreqmessage->GetArena();
    if (message_arena != submessage_arena) {
      txnreqmessage = ::google::protobuf::internal::GetOwnedMessage(message_arena, txnreqmessage, submessage_arena);
    }
    set_has_txnreqmessage();
    _impl_.msg_.txnreqmessage_ = txnreqmessage;
  }
  // @@protoc_insertion_point(field_set_allocated:message.MessageFromVNFInst.txnReqMessage)
}
void MessageFromVNFInst::set_allocated_pushccmessage(::message::setCCMessage* pushccmessage) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_msg();
  if (pushccmessage) {
    ::google::protobuf::Arena* submessage_arena = pushccmessage->GetArena();
    if (message_arena != submessage_arena) {
      pushccmessage = ::google::protobuf::internal::GetOwnedMessage(message_arena, pushccmessage, submessage_arena);
    }
    set_has_pushccmessage();
    _impl_.msg_.pushccmessage_ = pushccmessage;
  }
  // @@protoc_insertion_point(field_set_allocated:message.MessageFromVNFInst.pushCCMessage)
}
void MessageFromVNFInst::set_allocated_pushdsmessage(::message::setDSMessage* pushdsmessage) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_msg();
  if (pushdsmessage) {
    ::google::protobuf::Arena* submessage_arena = pushdsmessage->GetArena();
    if (message_arena != submessage_arena) {
      pushdsmessage = ::google::protobuf::internal::GetOwnedMessage(message_arena, pushdsmessage, submessage_arena);
    }
    set_has_pushdsmessage();
    _impl_.msg_.pushdsmessage_ = pushdsmessage;
  }
  // @@protoc_insertion_point(field_set_allocated:message.MessageFromVNFInst.pushDSMessage)
}
MessageFromVNFInst::MessageFromVNFInst(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:message.MessageFromVNFInst)
}
inline PROTOBUF_NDEBUG_INLINE MessageFromVNFInst::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : msg_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

MessageFromVNFInst::MessageFromVNFInst(
    ::google::protobuf::Arena* arena,
    const MessageFromVNFInst& from)
    : ::google::protobuf::Message(arena) {
  MessageFromVNFInst* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  switch (msg_case()) {
    case MSG_NOT_SET:
      break;
      case kMonitorReportMessage:
        _impl_.msg_.monitorreportmessage_ = CreateMaybeMessage<::message::MonitorReportMessage>(arena, *from._impl_.msg_.monitorreportmessage_);
        break;
      case kSfcMessage:
        _impl_.msg_.sfcmessage_ = CreateMaybeMessage<::message::SFCMessage>(arena, *from._impl_.msg_.sfcmessage_);
        break;
      case kTxnReqMessage:
        _impl_.msg_.txnreqmessage_ = CreateMaybeMessage<::message::TxnReqMessage>(arena, *from._impl_.msg_.txnreqmessage_);
        break;
      case kPushCCMessage:
        _impl_.msg_.pushccmessage_ = CreateMaybeMessage<::message::setCCMessage>(arena, *from._impl_.msg_.pushccmessage_);
        break;
      case kPushDSMessage:
        _impl_.msg_.pushdsmessage_ = CreateMaybeMessage<::message::setDSMessage>(arena, *from._impl_.msg_.pushdsmessage_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:message.MessageFromVNFInst)
}
inline PROTOBUF_NDEBUG_INLINE MessageFromVNFInst::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : msg_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void MessageFromVNFInst::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
MessageFromVNFInst::~MessageFromVNFInst() {
  // @@protoc_insertion_point(destructor:message.MessageFromVNFInst)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void MessageFromVNFInst::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (has_msg()) {
    clear_msg();
  }
  _impl_.~Impl_();
}

void MessageFromVNFInst::clear_msg() {
// @@protoc_insertion_point(one_of_clear_start:message.MessageFromVNFInst)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (msg_case()) {
    case kMonitorReportMessage: {
      if (GetArena() == nullptr) {
        delete _impl_.msg_.monitorreportmessage_;
      }
      break;
    }
    case kSfcMessage: {
      if (GetArena() == nullptr) {
        delete _impl_.msg_.sfcmessage_;
      }
      break;
    }
    case kTxnReqMessage: {
      if (GetArena() == nullptr) {
        delete _impl_.msg_.txnreqmessage_;
      }
      break;
    }
    case kPushCCMessage: {
      if (GetArena() == nullptr) {
        delete _impl_.msg_.pushccmessage_;
      }
      break;
    }
    case kPushDSMessage: {
      if (GetArena() == nullptr) {
        delete _impl_.msg_.pushdsmessage_;
      }
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = MSG_NOT_SET;
}


PROTOBUF_NOINLINE void MessageFromVNFInst::Clear() {
// @@protoc_insertion_point(message_clear_start:message.MessageFromVNFInst)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_msg();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* MessageFromVNFInst::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 5, 5, 0, 2> MessageFromVNFInst::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    5,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_MessageFromVNFInst_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .message.MonitorReportMessage monitorReportMessage = 1;
    {PROTOBUF_FIELD_OFFSET(MessageFromVNFInst, _impl_.msg_.monitorreportmessage_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .message.SFCMessage sfcMessage = 2;
    {PROTOBUF_FIELD_OFFSET(MessageFromVNFInst, _impl_.msg_.sfcmessage_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .message.TxnReqMessage txnReqMessage = 3;
    {PROTOBUF_FIELD_OFFSET(MessageFromVNFInst, _impl_.msg_.txnreqmessage_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .message.setCCMessage pushCCMessage = 4;
    {PROTOBUF_FIELD_OFFSET(MessageFromVNFInst, _impl_.msg_.pushccmessage_), _Internal::kOneofCaseOffset + 0, 3,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .message.setDSMessage pushDSMessage = 5;
    {PROTOBUF_FIELD_OFFSET(MessageFromVNFInst, _impl_.msg_.pushdsmessage_), _Internal::kOneofCaseOffset + 0, 4,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::message::MonitorReportMessage>()},
    {::_pbi::TcParser::GetTable<::message::SFCMessage>()},
    {::_pbi::TcParser::GetTable<::message::TxnReqMessage>()},
    {::_pbi::TcParser::GetTable<::message::setCCMessage>()},
    {::_pbi::TcParser::GetTable<::message::setDSMessage>()},
  }}, {{
  }},
};

::uint8_t* MessageFromVNFInst::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.MessageFromVNFInst)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (msg_case()) {
    case kMonitorReportMessage: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          1, _Internal::monitorreportmessage(this),
          _Internal::monitorreportmessage(this).GetCachedSize(), target, stream);
      break;
    }
    case kSfcMessage: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, _Internal::sfcmessage(this),
          _Internal::sfcmessage(this).GetCachedSize(), target, stream);
      break;
    }
    case kTxnReqMessage: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          3, _Internal::txnreqmessage(this),
          _Internal::txnreqmessage(this).GetCachedSize(), target, stream);
      break;
    }
    case kPushCCMessage: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          4, _Internal::pushccmessage(this),
          _Internal::pushccmessage(this).GetCachedSize(), target, stream);
      break;
    }
    case kPushDSMessage: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          5, _Internal::pushdsmessage(this),
          _Internal::pushdsmessage(this).GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.MessageFromVNFInst)
  return target;
}

::size_t MessageFromVNFInst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:message.MessageFromVNFInst)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (msg_case()) {
    // .message.MonitorReportMessage monitorReportMessage = 1;
    case kMonitorReportMessage: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.msg_.monitorreportmessage_);
      break;
    }
    // .message.SFCMessage sfcMessage = 2;
    case kSfcMessage: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.msg_.sfcmessage_);
      break;
    }
    // .message.TxnReqMessage txnReqMessage = 3;
    case kTxnReqMessage: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.msg_.txnreqmessage_);
      break;
    }
    // .message.setCCMessage pushCCMessage = 4;
    case kPushCCMessage: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.msg_.pushccmessage_);
      break;
    }
    // .message.setDSMessage pushDSMessage = 5;
    case kPushDSMessage: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.msg_.pushdsmessage_);
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData MessageFromVNFInst::_class_data_ = {
    MessageFromVNFInst::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* MessageFromVNFInst::GetClassData() const {
  return &_class_data_;
}

void MessageFromVNFInst::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<MessageFromVNFInst*>(&to_msg);
  auto& from = static_cast<const MessageFromVNFInst&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:message.MessageFromVNFInst)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.msg_case()) {
    case kMonitorReportMessage: {
      _this->_internal_mutable_monitorreportmessage()->::message::MonitorReportMessage::MergeFrom(
          from._internal_monitorreportmessage());
      break;
    }
    case kSfcMessage: {
      _this->_internal_mutable_sfcmessage()->::message::SFCMessage::MergeFrom(
          from._internal_sfcmessage());
      break;
    }
    case kTxnReqMessage: {
      _this->_internal_mutable_txnreqmessage()->::message::TxnReqMessage::MergeFrom(
          from._internal_txnreqmessage());
      break;
    }
    case kPushCCMessage: {
      _this->_internal_mutable_pushccmessage()->::message::setCCMessage::MergeFrom(
          from._internal_pushccmessage());
      break;
    }
    case kPushDSMessage: {
      _this->_internal_mutable_pushdsmessage()->::message::setDSMessage::MergeFrom(
          from._internal_pushdsmessage());
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MessageFromVNFInst::CopyFrom(const MessageFromVNFInst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:message.MessageFromVNFInst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool MessageFromVNFInst::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* MessageFromVNFInst::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void MessageFromVNFInst::InternalSwap(MessageFromVNFInst* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.msg_, other->_impl_.msg_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata MessageFromVNFInst::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_message_2eproto_getter, &descriptor_table_message_2eproto_once,
      file_level_metadata_message_2eproto[10]);
}
// ===================================================================

class MonitorReportMessage::_Internal {
 public:
};

MonitorReportMessage::MonitorReportMessage(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:message.MonitorReportMessage)
}
MonitorReportMessage::MonitorReportMessage(
    ::google::protobuf::Arena* arena, const MonitorReportMessage& from)
    : MonitorReportMessage(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE MonitorReportMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void MonitorReportMessage::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.cc_ = {};
}
MonitorReportMessage::~MonitorReportMessage() {
  // @@protoc_insertion_point(destructor:message.MonitorReportMessage)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void MonitorReportMessage::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void MonitorReportMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:message.MonitorReportMessage)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.cc_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* MonitorReportMessage::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> MonitorReportMessage::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_MonitorReportMessage_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .message.CC cc = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MonitorReportMessage, _impl_.cc_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(MonitorReportMessage, _impl_.cc_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .message.CC cc = 1;
    {PROTOBUF_FIELD_OFFSET(MonitorReportMessage, _impl_.cc_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* MonitorReportMessage::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.MonitorReportMessage)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .message.CC cc = 1;
  if (this->_internal_cc() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_cc(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.MonitorReportMessage)
  return target;
}

::size_t MonitorReportMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:message.MonitorReportMessage)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .message.CC cc = 1;
  if (this->_internal_cc() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_cc());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData MonitorReportMessage::_class_data_ = {
    MonitorReportMessage::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* MonitorReportMessage::GetClassData() const {
  return &_class_data_;
}

void MonitorReportMessage::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<MonitorReportMessage*>(&to_msg);
  auto& from = static_cast<const MonitorReportMessage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:message.MonitorReportMessage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_cc() != 0) {
    _this->_internal_set_cc(from._internal_cc());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MonitorReportMessage::CopyFrom(const MonitorReportMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:message.MonitorReportMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool MonitorReportMessage::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* MonitorReportMessage::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void MonitorReportMessage::InternalSwap(MonitorReportMessage* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.cc_, other->_impl_.cc_);
}

::google::protobuf::Metadata MonitorReportMessage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_message_2eproto_getter, &descriptor_table_message_2eproto_once,
      file_level_metadata_message_2eproto[11]);
}
// ===================================================================

class SFCMessage::_Internal {
 public:
};

SFCMessage::SFCMessage(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:message.SFCMessage)
}
inline PROTOBUF_NDEBUG_INLINE SFCMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : sfcjson_(arena, from.sfcjson_),
        _cached_size_{0} {}

SFCMessage::SFCMessage(
    ::google::protobuf::Arena* arena,
    const SFCMessage& from)
    : ::google::protobuf::Message(arena) {
  SFCMessage* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:message.SFCMessage)
}
inline PROTOBUF_NDEBUG_INLINE SFCMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : sfcjson_(arena),
        _cached_size_{0} {}

inline void SFCMessage::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
SFCMessage::~SFCMessage() {
  // @@protoc_insertion_point(destructor:message.SFCMessage)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SFCMessage::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.sfcjson_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SFCMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:message.SFCMessage)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.sfcjson_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SFCMessage::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 34, 2> SFCMessage::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SFCMessage_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string SFCJson = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SFCMessage, _impl_.sfcjson_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string SFCJson = 1;
    {PROTOBUF_FIELD_OFFSET(SFCMessage, _impl_.sfcjson_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\22\7\0\0\0\0\0\0"
    "message.SFCMessage"
    "SFCJson"
  }},
};

::uint8_t* SFCMessage::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.SFCMessage)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string SFCJson = 1;
  if (!this->_internal_sfcjson().empty()) {
    const std::string& _s = this->_internal_sfcjson();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "message.SFCMessage.SFCJson");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.SFCMessage)
  return target;
}

::size_t SFCMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:message.SFCMessage)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string SFCJson = 1;
  if (!this->_internal_sfcjson().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_sfcjson());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SFCMessage::_class_data_ = {
    SFCMessage::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SFCMessage::GetClassData() const {
  return &_class_data_;
}

void SFCMessage::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SFCMessage*>(&to_msg);
  auto& from = static_cast<const SFCMessage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:message.SFCMessage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_sfcjson().empty()) {
    _this->_internal_set_sfcjson(from._internal_sfcjson());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SFCMessage::CopyFrom(const SFCMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:message.SFCMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SFCMessage::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SFCMessage::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SFCMessage::InternalSwap(SFCMessage* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sfcjson_, &other->_impl_.sfcjson_, arena);
}

::google::protobuf::Metadata SFCMessage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_message_2eproto_getter, &descriptor_table_message_2eproto_once,
      file_level_metadata_message_2eproto[12]);
}
// ===================================================================

class TxnReqMessage::_Internal {
 public:
};

TxnReqMessage::TxnReqMessage(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:message.TxnReqMessage)
}
TxnReqMessage::TxnReqMessage(
    ::google::protobuf::Arena* arena, const TxnReqMessage& from)
    : TxnReqMessage(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE TxnReqMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void TxnReqMessage::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           0,
           offsetof(Impl_, key_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::key_));
}
TxnReqMessage::~TxnReqMessage() {
  // @@protoc_insertion_point(destructor:message.TxnReqMessage)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TxnReqMessage::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void TxnReqMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:message.TxnReqMessage)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.key_) -
      reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.key_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TxnReqMessage::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2> TxnReqMessage::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_TxnReqMessage_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int32 key = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TxnReqMessage, _impl_.key_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(TxnReqMessage, _impl_.key_)}},
    // .message.CC cc = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TxnReqMessage, _impl_.cc_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(TxnReqMessage, _impl_.cc_)}},
    // uint64 id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(TxnReqMessage, _impl_.id_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(TxnReqMessage, _impl_.id_)}},
    // int32 saIdx = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TxnReqMessage, _impl_.saidx_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(TxnReqMessage, _impl_.saidx_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .message.CC cc = 1;
    {PROTOBUF_FIELD_OFFSET(TxnReqMessage, _impl_.cc_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // uint64 id = 2;
    {PROTOBUF_FIELD_OFFSET(TxnReqMessage, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // int32 saIdx = 3;
    {PROTOBUF_FIELD_OFFSET(TxnReqMessage, _impl_.saidx_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 key = 4;
    {PROTOBUF_FIELD_OFFSET(TxnReqMessage, _impl_.key_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* TxnReqMessage::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.TxnReqMessage)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .message.CC cc = 1;
  if (this->_internal_cc() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_cc(), target);
  }

  // uint64 id = 2;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        2, this->_internal_id(), target);
  }

  // int32 saIdx = 3;
  if (this->_internal_saidx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_saidx(), target);
  }

  // int32 key = 4;
  if (this->_internal_key() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<4>(
            stream, this->_internal_key(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.TxnReqMessage)
  return target;
}

::size_t TxnReqMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:message.TxnReqMessage)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 id = 2;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_id());
  }

  // .message.CC cc = 1;
  if (this->_internal_cc() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_cc());
  }

  // int32 saIdx = 3;
  if (this->_internal_saidx() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_saidx());
  }

  // int32 key = 4;
  if (this->_internal_key() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_key());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TxnReqMessage::_class_data_ = {
    TxnReqMessage::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* TxnReqMessage::GetClassData() const {
  return &_class_data_;
}

void TxnReqMessage::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TxnReqMessage*>(&to_msg);
  auto& from = static_cast<const TxnReqMessage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:message.TxnReqMessage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_id() != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  if (from._internal_cc() != 0) {
    _this->_internal_set_cc(from._internal_cc());
  }
  if (from._internal_saidx() != 0) {
    _this->_internal_set_saidx(from._internal_saidx());
  }
  if (from._internal_key() != 0) {
    _this->_internal_set_key(from._internal_key());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TxnReqMessage::CopyFrom(const TxnReqMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:message.TxnReqMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TxnReqMessage::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* TxnReqMessage::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void TxnReqMessage::InternalSwap(TxnReqMessage* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TxnReqMessage, _impl_.key_)
      + sizeof(TxnReqMessage::_impl_.key_)
      - PROTOBUF_FIELD_OFFSET(TxnReqMessage, _impl_.id_)>(
          reinterpret_cast<char*>(&_impl_.id_),
          reinterpret_cast<char*>(&other->_impl_.id_));
}

::google::protobuf::Metadata TxnReqMessage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_message_2eproto_getter, &descriptor_table_message_2eproto_once,
      file_level_metadata_message_2eproto[13]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace message
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
